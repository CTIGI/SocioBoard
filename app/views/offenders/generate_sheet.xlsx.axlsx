def range_dates_measure(start_date_measure, end_date_measure)
  start_date_measure = start_date_measure == t("app.no_record") ? "" : l(start_date_measure.to_date)
  end_date_measure   = end_date_measure == t("app.no_record") ? "" : l(end_date_measure.to_date)
  "#{start_date_measure} - #{end_date_measure}"
end

wb = xlsx_package.workbook
wb.add_worksheet(name: t("views.reports.offenders_list")) do |sheet|
  header = [
    t('activerecord.attributes.offender.unit'),
    t('activerecord.attributes.offender.name'),
    t('activerecord.attributes.offender.age'),
    t('activerecord.attributes.offender.recurrent'),
    t('activerecord.attributes.offender.origin_county'),
    t('activerecord.attributes.offender.article'),
    t('views.offenders.filter_panel.currrent_period_measure_type'),
    t('activerecord.attributes.offender.measures_measure_deadline'),
    t('activerecord.attributes.offender.measure_dates')
  ]

  if evaded_search
    header << t('activerecord.attributes.offender.evasion_date')
  end

  sheet.add_row [t("views.reports.report_data", data: Time.now.strftime('%d/%m/%Y Ã s %H:%M'))]
  sheet.add_style 'A1', bg_color: 'afafaf', b: true
  sheet.add_border 'A1:A1'
  sheet.add_row
  sheet.add_row [@total[0].to_a.join(" : ")]
  @counters.each {|c| sheet.add_row [ "#{c.keys[0]} : #{c.values[0]} (#{c.values[1]})" ] } unless @counters.blank?

  (0..@counters.size).each do |row|
    cell = "A#{3 + row}:A#{3 + row}"
    sheet.add_border cell
    sheet.add_style cell, bg_color: '3DA775',font_color: '3DA775', b: true
  end

  sheet.add_row
  sheet.add_row header

  header_table_pos = 3 + 2 + @counters.size
  header_table = "A#{header_table_pos}:I#{header_table_pos}"
  sheet.add_style header_table, bg_color: '3DA775',font_color: '3DA775', b: true
  ("A".."I").each {|col| sheet.add_border "#{col}#{header_table_pos}:#{col}#{header_table_pos}" }

  @offenders.each_with_index do |offender, index|
    if evaded_search
    sheet.add_row [
      truncate_words(offender.unit.name),
      display_offender_name(offender.name, current_user),
      show_field(offender.age),
      show_field(offender.recurrent),
      show_field(offender.origin_county),
      show_field(offender.crimes.pluck(:name).join(", ")),
      "#{ActionView::Base.full_sanitizer.sanitize(period_label(offender))} - #{UnicodeUtils.upcase(measure_data(offender,   :measure_type))} - #{
      (measure_data(offender, :measure_situation))}",
      measure_data(offender, :measure_deadline),
      range_dates_measure(measure_data(offender, :start_date_measure), measure_data(offender, :end_date_measure)),
      l(offender.evasion_date)
      ]
    else
      sheet.add_row [
        truncate_words(offender.unit.name),
        display_offender_name(offender.name, current_user),
        show_field(offender.age),
        show_field(offender.recurrent),
        show_field(offender.origin_county),
        show_field(offender.crimes.pluck(:name).join(", ")),
        "#{ActionView::Base.full_sanitizer.sanitize(period_label(offender))} - #{UnicodeUtils.upcase(measure_data(offender,   :measure_type))} - #{
        (measure_data(offender, :measure_situation))}",
        measure_data(offender, :measure_deadline),
        range_dates_measure(measure_data(offender, :start_date_measure), measure_data(offender, :end_date_measure))
        ]
    end

    row_index = header_table_pos + index + 1
    ("A".."I").each {|col| sheet.add_border "#{col}#{row_index}:#{col}#{row_index}" }
  end

  wb.apply_styles
end
